from telebot import types
from bd import *
from configs.config_mate import *
from configs.config_job import *
from configs.config_skills import *


class MateRegistration:
    def __init__(self, data):
        self.id = data[0]
        self.name = data[1]
        self.username = data[2]
        self.address = data[3]
        self.age = data[4]
        self.price = data[5]
        self.sex_mate = data[6]
        self.desc_yourself = data[7]
        self.desc_you = data[8]
        self.sex = data[9]

    def get_fio(self, message):
        self.id = message.from_user.id
        self.username = message.from_user.username
        self.name = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("–ú—É–∂—Å–∫–æ–π")
        btn2 = types.KeyboardButton("–ñ–µ–Ω—Å–∫–∏–π")

        markup.row(btn1, btn2)

        msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –ø–æ–ª:", reply_markup=markup)
        mate_bot.register_next_step_handler(msg, self.get_sex)

    def get_sex(self, message):
        self.sex = message.text
        if self.age:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton(text=self.age)
            markup.add(btn1)
            msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:", reply_markup=markup)
        else:
            msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:", reply_markup=types.ReplyKeyboardRemove())
        mate_bot.register_next_step_handler(msg, self.get_age)

    def get_age(self, message):
        if message.text.isdigit():
            self.age = message.text
            if self.address:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton(text=self.address)
                markup.add(btn1)
                msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥, –≥–¥–µ —Ç—ã –∏—â–µ—à—å —Å–æ—Å–µ–¥–∞:",
                                       reply_markup=markup)
            else:
                msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥, –≥–¥–µ —Ç—ã –∏—â–µ—à—å —Å–æ—Å–µ–¥–∞:", reply_markup=types.ReplyKeyboardRemove())

            mate_bot.register_next_step_handler(msg, self.get_location)
        else:
            msg = mate_bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!")

            mate_bot.register_next_step_handler(msg, self.get_age)

    def get_location(self, message):
        loc = geolocator.geocode(message.text)

        if loc:

            address = geolocator.reverse((loc.latitude, loc.longitude)).raw["address"]

            town = address.get('town', '')
            city = address.get('city', '')
            state = address.get('state', '')

            if town != "":
                self.address = town
            elif city != "":
                self.address = city
            else:
                self.address = state

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("‚úî –í—Å–µ –≤–µ—Ä–Ω–æ")
            btn2 = types.KeyboardButton("‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å")

            markup.row(btn1, btn2)

            msg = mate_bot.send_message(message.chat.id, f'{loc}\n–í–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å?', reply_markup=markup)

            mate_bot.register_next_step_handler(msg, self.choice)

        else:
            msg = mate_bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
            mate_bot.register_next_step_handler(msg, self.get_location)

    def choice(self, message):
        if message.text == "‚úî –í—Å–µ –≤–µ—Ä–Ω–æ":
            if self.price:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton(text=self.price)
                markup.add(btn1)
                msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –±—é–¥–∂–µ—Ç (–ù–∞–ø—Ä–∏–º–µ—Ä: 25000 —Ä—É–±–ª–µ–π):", reply_markup=markup)
            else:
                msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –±—é–¥–∂–µ—Ç (–ù–∞–ø—Ä–∏–º–µ—Ä: 25000 —Ä—É–±–ª–µ–π):", reply_markup=types.ReplyKeyboardRemove())
            mate_bot.register_next_step_handler(msg, self.get_price)


        elif message.text == "‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å":
            msg = mate_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥, –≥–¥–µ —Ç—ã –∏—â–µ—à—å —Å–æ—Å–µ–¥–∞:", reply_markup=types.ReplyKeyboardRemove())
            mate_bot.register_next_step_handler(msg, self.get_location)


    def get_price(self, message):
        self.price = message.text

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("–ü–∞—Ä–Ω—è")
        btn2 = types.KeyboardButton("–î–µ–≤—É—à–∫—É")

        markup.row(btn1, btn2)

        msg = mate_bot.send_message(message.chat.id,
                               "–ö–æ–≥–æ —Ç—ã –∏—â–µ—à—å: ", reply_markup=markup)
        mate_bot.register_next_step_handler(msg, self.get_sex_mate)

    def get_sex_mate(self, message):
        if message.text == "–ü–∞—Ä–Ω—è":
            self.sex_mate = "–ú—É–∂—Å–∫–æ–π"
        elif message.text == "–î–µ–≤—É—à–∫—É":
            self.sex_mate = "–ñ–µ–Ω—Å–∫–∏–π"
        else:
            msg = mate_bot.send_message(message.chat.id,
                                   "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            mate_bot.register_next_step_handler(msg, self.get_sex_mate)

        if self.desc_yourself:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ")

            markup.add(btn1)

            msg = mate_bot.send_message(message.chat.id,
                                   "–û–ø–∏—à–∏, –∫–∞–∫–∏–º —Å–æ—Å–µ–¥–æ–º –∏ —á–µ–ª–æ–≤–µ–∫–æ–º —Ç—ã —Å–µ–±—è —Å—á–∏—Ç–∞–µ—à—å\n(–î–∞–π—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ):", reply_markup=markup)
        else:
            msg = mate_bot.send_message(message.chat.id,
                                   "–û–ø–∏—à–∏, –∫–∞–∫–∏–º —Å–æ—Å–µ–¥–æ–º –∏ —á–µ–ª–æ–≤–µ–∫–æ–º —Ç—ã —Å–µ–±—è —Å—á–∏—Ç–∞–µ—à—å\n(–î–∞–π—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ):",
                                   reply_markup=types.ReplyKeyboardRemove())
        mate_bot.register_next_step_handler(msg, self.get_desc_yourself)

    def get_desc_yourself(self,message):
        if message.text != "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ":
            self.desc_yourself = message.text

        if self.desc_you:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ")

            markup.add(btn1)

            msg = mate_bot.send_message(message.chat.id,
                                   "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–æ—Å–µ–¥—É\n–ö–∞–∫–∏–º –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–≤–æ–µ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏:", reply_markup=markup)
        else:

            msg = mate_bot.send_message(message.chat.id,
                                   "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–æ—Å–µ–¥—É\n–ö–∞–∫–∏–º –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–≤–æ–µ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏:", reply_markup=types.ReplyKeyboardRemove())
        mate_bot.register_next_step_handler(msg, self.get_desc_you)


    def get_desc_you(self, message):
        if message.text != "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ":
            self.desc_you = message.text

        register_mate(self.id, self.name, self.username, self.address, self.age, self.price, self.sex_mate, self.desc_yourself, self.desc_you, self.sex)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
        btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
        btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
        btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
        btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

        markup.row(btn1, btn2, btn3).row(btn4, btn5)

        mate_bot.send_message(message.chat.id, f"üë• –í–∞—à–∞ –ê–Ω–∫–µ—Ç–∞ –°–æ—Å–µ–¥–∞\n"
                                          f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {self.name}\n"
                                          f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {self.address}\n"
                                          f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {self.age}\n"
                                          f"üí∞ –ë—é–¥–∂–µ—Ç: {self.price}\n"
                                          f"üîç –û–±–æ –º–Ω–µ: {self.desc_yourself}\n"
                                          f"üîç –û —Ç–µ–±–µ: {self.desc_you}", reply_markup=markup)


class ResumeRegistration:
    def __init__(self, data):
        self.id = data[0]
        self.username = data[1]
        self.name = data[2]
        self.address = data[3]
        self.desc_yourself = data[4]

    def get_fio(self, message):
        self.id = message.from_user.id
        self.username = message.from_user.username
        self.name = message.text
        if self.address:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton(text=self.address)
            markup.add(btn1)
            msg = job_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥, –≥–¥–µ —Ç—ã –∏—â–µ—à—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É:",
                                   reply_markup=markup)
        else:
            msg = job_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥, –≥–¥–µ —Ç—ã –∏—â–µ—à—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É:",
                                   reply_markup=types.ReplyKeyboardRemove())

        job_bot.register_next_step_handler(msg, self.get_location)

    def get_location(self, message):
        loc = geolocator_job.geocode(message.text)

        if loc:

            address = geolocator_job.reverse((loc.latitude, loc.longitude)).raw["address"]

            town = address.get('town', '')
            city = address.get('city', '')
            state = address.get('state', '')

            if town != "":
                self.address = town
            elif city != "":
                self.address = city
            else:
                self.address = state

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("‚úî –í—Å–µ –≤–µ—Ä–Ω–æ")
            btn2 = types.KeyboardButton("‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å")

            markup.row(btn1, btn2)

            msg = job_bot.send_message(message.chat.id, f'{loc}\n–í–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å?', reply_markup=markup)

            job_bot.register_next_step_handler(msg, self.choice)

        else:
            msg = job_bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
            job_bot.register_next_step_handler(msg, self.get_location)

    def choice(self, message):
        if message.text == "‚úî –í—Å–µ –≤–µ—Ä–Ω–æ":
            if self.desc_yourself:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton(text=self.desc_yourself)
                markup.add(btn1)
                msg = job_bot.send_message(message.chat.id, "–û–ø–∏—à–∏—Ç–µ —Å–µ–±—è, —Å–≤–æ–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–≤–æ–∏ —É–º–µ–Ω–∏—è:", reply_markup=markup)
            else:
                msg = job_bot.send_message(message.chat.id, "–û–ø–∏—à–∏—Ç–µ —Å–µ–±—è, —Å–≤–æ–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–≤–æ–∏ —É–º–µ–Ω–∏—è:",
                                       reply_markup=types.ReplyKeyboardRemove())

            job_bot.register_next_step_handler(msg, self.get_desc_yourself)


        elif message.text == "‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å":
            msg = job_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥, –≥–¥–µ —Ç—ã –∏—â–µ—à—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É:",
                                   reply_markup=types.ReplyKeyboardRemove())
            job_bot.register_next_step_handler(msg, self.get_location)

    def get_desc_yourself(self, message):
        if message.text != "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ":
            self.desc_yourself = message.text

        register_resume(self.id, self.name, self.username, self.address, self.desc_yourself)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
        btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
        btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
        btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
        btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

        markup.row(btn1, btn2, btn3).row(btn4, btn5)

        job_bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ "–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"! üöÄüéì\n'
                                              '–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —É–¥–æ–±–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± –Ω–∞—Ö–æ–¥–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏. –ú—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å –≤ –∫–∞—Ä—å–µ—Ä–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –æ—Ç –≤–µ–¥—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π.\n'
                                              '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –≤ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π —Ç–µ–±—è –æ–±–ª–∞—Å—Ç—å—é. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –ø–æ–∏—Å–∫ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–¥–æ–±–Ω—ã–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º!\n'
                                              '–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –æ–±—Ä–∞—â–∞—Ç—å—Å—è. –£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏! üíºüåê',
                             reply_markup=markup)


class VacancyRegistration:
    def __init__(self):
        self.name = None
        self.address = None
        self.post = None
        self.responsibilities = None
        self.requirements = None
        self.conditions = None
        self.salary = None

    def get_fio(self, message):
        self.name = message.text

        msg = job_bot.send_message(message.chat.id, "–ì–æ—Ä–æ–¥:")

        job_bot.register_next_step_handler(msg, self.get_location)

    def get_location(self, message):
        loc = geolocator_job.geocode(message.text)

        if loc:

            address = geolocator_job.reverse((loc.latitude, loc.longitude)).raw["address"]

            town = address.get('town', '')
            city = address.get('city', '')
            state = address.get('state', '')

            if town != "":
                self.address = town
            elif city != "":
                self.address = city
            else:
                self.address = state

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("‚úî –í—Å–µ –≤–µ—Ä–Ω–æ")
            btn2 = types.KeyboardButton("‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å")

            markup.row(btn1, btn2)

            msg = job_bot.send_message(message.chat.id, f'{loc}\n–í–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å?', reply_markup=markup)

            job_bot.register_next_step_handler(msg, self.choice)

        else:
            msg = job_bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
            job_bot.register_next_step_handler(msg, self.get_location)

    def choice(self, message):
        if message.text == "‚úî –í—Å–µ –≤–µ—Ä–Ω–æ":
            msg = job_bot.send_message(message.chat.id, "–î–æ–ª–∂–Ω–æ—Å—Ç—å:")

            job_bot.register_next_step_handler(msg, self.get_post)


        elif message.text == "‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å":
            msg = job_bot.send_message(message.chat.id, "–ì–æ—Ä–æ–¥:")
            job_bot.register_next_step_handler(msg, self.get_location)

    def get_post(self, message):
        self.post = message.text

        msg = job_bot.send_message(message.chat.id, "–û–±—è–∑–∞–Ω–æ—Å—Ç–∏:")

        job_bot.register_next_step_handler(msg, self.get_responsibilities)

    def get_responsibilities(self, message):
        self.responsibilities = message.text

        msg = job_bot.send_message(message.chat.id, "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:")

        job_bot.register_next_step_handler(msg, self.get_requirements)

    def get_requirements(self, message):
        self.requirements = message.text

        msg = job_bot.send_message(message.chat.id, "–£—Å–ª–æ–≤–∏—è:")

        job_bot.register_next_step_handler(msg, self.get_conditions)

    def get_conditions(self, message):
        self.conditions = message.text

        msg = job_bot.send_message(message.chat.id, "–ó–∞—Ä–ø–ª–∞—Ç–∞:")

        job_bot.register_next_step_handler(msg, self.get_salary)


    def get_salary(self, message):
        self.salary = message.text

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("‚úî –í—Å–µ –≤–µ—Ä–Ω–æ")
        btn2 = types.KeyboardButton("‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å")

        markup.row(btn1, btn2)
        job_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                                        f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {self.name}\n"
                                                        f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {self.post}\n"
                                                        f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {self.requirements}\n"
                                                        f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {self.conditions}\n"
                                                        f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {self.responsibilities}\n"
                                                        f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {self.salary}")
        msg = job_bot.send_message(message.chat.id, "–í—Å–µ –≤–µ—Ä–Ω–æ?:", reply_markup=markup)

        job_bot.register_next_step_handler(msg, self.get_end)

    def get_end(self, message):
        if message.text == "‚úî –í—Å–µ –≤–µ—Ä–Ω–æ":

            register_job(self.name, self.address, self.post, self.responsibilities, self.requirements, self.conditions, self.salary)

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
            btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
            btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
            btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

            markup.row(btn1, btn2).row(btn4, btn5)

            job_bot.send_message(message.chat.id, '–ê–Ω–∫–µ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞',
                                 reply_markup=markup)
        else:
            job_bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:")
            job_bot.register_next_step_handler(message, self.get_fio)


class SkillsRegistration:
    def __init__(self, data):
        print(data)
        self.id = data[0]
        self.name = data[1]
        self.username = data[2]
        self.address = data[3]
        self.age = data[4]
        self.sex_skills = data[5]
        self.desc_yourself = data[6]
        self.desc_you = data[7]
        self.sex = data[8]

    def get_fio(self, message):
        self.id = message.from_user.id
        self.username = message.from_user.username
        self.name = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("–ú—É–∂—Å–∫–æ–π")
        btn2 = types.KeyboardButton("–ñ–µ–Ω—Å–∫–∏–π")

        markup.row(btn1, btn2)

        msg = skills_bot.send_message(message.chat.id, "–¢–≤–æ–π –ø–æ–ª:", reply_markup=markup)
        skills_bot.register_next_step_handler(msg, self.get_sex)

    def get_sex(self, message):
        self.sex = message.text
        if self.age:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton(text=self.age)
            markup.add(btn1)
            msg = skills_bot.send_message(message.chat.id, "–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:", reply_markup=markup)
        else:
            msg = skills_bot.send_message(message.chat.id, "–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:", reply_markup=types.ReplyKeyboardRemove())
        skills_bot.register_next_step_handler(msg, self.get_age)

    def get_age(self, message):
        if message.text.isdigit():
            self.age = message.text
            if self.address:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton(text=self.address)
                markup.add(btn1)
                msg = skills_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥:",
                                       reply_markup=markup)
            else:
                msg = skills_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥:", reply_markup=types.ReplyKeyboardRemove())

            skills_bot.register_next_step_handler(msg, self.get_location)
        else:
            msg = skills_bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!")

            skills_bot.register_next_step_handler(msg, self.get_age)

    def get_location(self, message):
        loc = geolocator_skills.geocode(message.text)

        if loc:

            address = geolocator_skills.reverse((loc.latitude, loc.longitude)).raw["address"]

            town = address.get('town', '')
            city = address.get('city', '')
            state = address.get('state', '')

            if town != "":
                self.address = town
            elif city != "":
                self.address = city
            else:
                self.address = state

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("‚úî –í—Å–µ –≤–µ—Ä–Ω–æ")
            btn2 = types.KeyboardButton("‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å")

            markup.row(btn1, btn2)

            msg = skills_bot.send_message(message.chat.id, f'{loc}\n–í–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å?', reply_markup=markup)

            skills_bot.register_next_step_handler(msg, self.choice)

        else:
            msg = skills_bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
            skills_bot.register_next_step_handler(msg, self.get_location)

    def choice(self, message):
        if message.text == "‚úî –í—Å–µ –≤–µ—Ä–Ω–æ":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("–ü–∞—Ä–Ω—è")
            btn2 = types.KeyboardButton("–î–µ–≤—É—à–∫—É")

            markup.row(btn1, btn2)

            msg = skills_bot.send_message(message.chat.id,
                                        "–ö–æ–≥–æ —Ç—ã –∏—â–µ—à—å: ", reply_markup=markup)
            skills_bot.register_next_step_handler(msg, self.get_sex_skills)

        elif message.text == "‚ùå –ù–µ—Ç, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å":
            msg = skills_bot.send_message(message.chat.id, "–¢–≤–æ–π –≥–æ—Ä–æ–¥:", reply_markup=types.ReplyKeyboardRemove())
            skills_bot.register_next_step_handler(msg, self.get_location)

    def get_sex_skills(self, message):
        if message.text == "–ü–∞—Ä–Ω—è":
            self.sex_skills = "–ú—É–∂—Å–∫–æ–π"
        elif message.text == "–î–µ–≤—É—à–∫—É":
            self.sex_skills = "–ñ–µ–Ω—Å–∫–∏–π"
        else:
            msg = skills_bot.send_message(message.chat.id,
                                   "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            skills_bot.register_next_step_handler(msg, self.get_sex_skills)

        if self.desc_yourself:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ")

            markup.add(btn1)

            msg = skills_bot.send_message(message.chat.id,
                                   "–û–ø–∏—à–∏ —Å–≤–æ–∏ –∫–∞—á–µ—Å—Ç–≤–∞, —É–º–µ–Ω–∏—è –∏ —Ç–¥...:", reply_markup=markup)
        else:
            msg = skills_bot.send_message(message.chat.id,
                                   "–û–ø–∏—à–∏ —Å–≤–æ–∏ –∫–∞—á–µ—Å—Ç–≤–∞, —É–º–µ–Ω–∏—è –∏ —Ç–¥...:",
                                   reply_markup=types.ReplyKeyboardRemove())
        skills_bot.register_next_step_handler(msg, self.get_desc_yourself)

    def get_desc_yourself(self,message):
        if message.text != "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ":
            self.desc_yourself = message.text

        if self.desc_you:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ")

            markup.add(btn1)

            msg = skills_bot.send_message(message.chat.id,
                                   "–û–ø–∏—à–∏ –∫–∞—á–µ—Å—Ç–≤–∞, —É–º–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã –∏—â–µ—à—å:", reply_markup=markup)
        else:

            msg = skills_bot.send_message(message.chat.id,
                                   "–û–ø–∏—à–∏ –∫–∞—á–µ—Å—Ç–≤–∞, —É–º–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã –∏—â–µ—à—å:", reply_markup=types.ReplyKeyboardRemove())
        skills_bot.register_next_step_handler(msg, self.get_desc_you)


    def get_desc_you(self, message):
        if message.text != "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ":
            self.desc_you = message.text

        register_skills(self.id, self.name, self.username, self.address, self.age, self.sex_skills, self.desc_yourself, self.desc_you, self.sex)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
        btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
        btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
        btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
        btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

        markup.row(btn1, btn2, btn3).row(btn4, btn5)

        skills_bot.send_message(message.chat.id, f"üë• –í–∞—à–∞ –ê–Ω–∫–µ—Ç–∞ –û–±–º–µ–Ω–∞ –ù–∞–≤—ã–∫–∞–º–∏\n"
                                          f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {self.name}\n"
                                          f"üè° –ò—â—É —á–µ–ª–æ–≤–µ–∫–∞ –≤: {self.address}\n"
                                          f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {self.age}\n"
                                          f"üîç –û–±–æ –º–Ω–µ: {self.desc_yourself}\n"
                                          f"üîç –û —Ç–µ–±–µ: {self.desc_you}", reply_markup=markup)