import random

from configs.config_mate import *
from bd import *
from telebot import types
from configs.config_job import *
from configs.config_skills import *

class MateFeed:
    def __init__(self, count, data):
        self.count = count
        self.data = data
        self.ads_count = 0

    def feed(self, message):
        bd_mate = feed_mate(self.data[0], self.data[3], self.data[6], self.data[9])
        flag = True
        is_count = True

        if message.chat.id in users:
            if len(users[message.chat.id]) > 0:
                markup = types.InlineKeyboardMarkup()

                btn1 = types.InlineKeyboardButton("–õ–∞–π–∫", callback_data="like")
                btn2 = types.InlineKeyboardButton("–î–∏–∑–ª–∞–π–∫", callback_data="dislike")

                markup.add(btn1)
                markup.add(btn2)

                for i in range(len(users[message.chat.id])):
                    mate_bot.send_message(message.chat.id, text=users[message.chat.id][i]["text"], reply_markup=markup)
                msg = mate_bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è!", reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(types.KeyboardButton("–û–∫–µ–π")))
                mate_bot.register_next_step_handler(msg, self.feed)
                return

        if message.text == "–û–∫–µ–π":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("‚ù§")
            btn2 = types.KeyboardButton("üëé")
            btn3 = types.KeyboardButton("üí§")

            markup.row(btn1, btn2, btn3)

            msg = mate_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°–æ—Å–µ–¥–∞\n\n"
                                                    f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_mate[self.count][1]}\n"
                                                    f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {bd_mate[self.count][3]}\n"
                                                    f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_mate[self.count][4]}\n"
                                                    f"üí∞ –ë—é–¥–∂–µ—Ç: {bd_mate[self.count][5]}\n"
                                                    f"üîç –û–±–æ –º–Ω–µ: {bd_mate[self.count][7]}\n"
                                                    f"üîç –û —Ç–µ–±–µ: {bd_mate[self.count][8]}", reply_markup=markup)
            mate_bot.register_next_step_handler(msg, self.feed)
            return

        self.ads_count += 1

        if self.ads_count > 30:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn = types.KeyboardButton("–û–∫–µ–π")
            markup.add(btn)

            msg = mate_bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª: "
                                                    "<a href='https://t.me/+S46mvD24xeFhZWIy'>–°—Ç—É–¥–ª–∞–π—Ñ</a>\n"
                                                    "–í –Ω–µ–º –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –≤–∞—Å\n\n"
                                                    "–° —É–≤–∞–∂–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥–∞ Studlife", parse_mode="HTML",
                                   reply_markup=markup)
            mate_bot.register_next_step_handler(msg, self.feed_after)
            self.ads_count = 0
            return

        self.count_pred = self.count

        for i in range(self.count + 1, len(bd_mate)):
            if bd_mate[i][10] == 1:
                self.count = i
                print(self.count)
                flag = False
                is_count = False
                break

        if flag:
            for i in range(len(bd_mate)):
                if bd_mate[i][10] == 1:
                    is_count = False
                    self.count_pred = self.count
                    self.count = i
                    break

        if is_count or len(bd_mate) == 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
            btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
            btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
            btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
            btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

            markup.row(btn1, btn2, btn3).row(btn4, btn5)

            mate_bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç –Ω–µ—Ç!", reply_markup=markup)

        else:
            if message.text == "üëé":
                msg = mate_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°–æ—Å–µ–¥–∞\n\n"
                                                        f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_mate[self.count][1]}\n"
                                                        f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {bd_mate[self.count][3]}\n"
                                                        f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_mate[self.count][4]}\n"
                                                        f"üí∞ –ë—é–¥–∂–µ—Ç: {bd_mate[self.count][5]}\n"
                                                        f"üîç –û–±–æ –º–Ω–µ: {bd_mate[self.count][7]}\n"
                                                        f"üîç –û —Ç–µ–±–µ: {bd_mate[self.count][8]}")
                mate_bot.register_next_step_handler(msg, self.feed)

            elif message.text == "‚ù§":
                print(f"{self.data[1]} –ª–∞–π–∫–Ω—É–ª {bd_mate[self.count_pred][1]}")

                if bd_mate[self.count_pred][0] in users:
                    if f'@{message.from_user.username}' in [i["username"] for i in
                                                            users[bd_mate[self.count_pred][0]]]:
                        mate_bot.send_message(message.chat.id, "–í—ã —É–∂–µ –ª–∞–π–∫–Ω—É–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n–í–∏–¥–Ω–æ –æ–Ω –µ—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª!")

                    else:
                        users[bd_mate[self.count - 1][0]].append({"username": f'@{message.from_user.username}',
                                                                  "text": f"{self.data[1]} –ª–∞–π–Ω–∫—É–ª/–∞ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É\n\n"
                                                                          f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {self.data[1]}\n"
                                                                          f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {self.data[3]}\n"
                                                                          f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {self.data[4]}\n"
                                                                          f"üí∞ –ë—é–¥–∂–µ—Ç: {self.data[5]}\n"
                                                                          f"üîç –û–±–æ –º–Ω–µ: {self.data[7]}\n"
                                                                          f"üîç –û —Ç–µ–±–µ: {self.data[8]}"})
                else:
                    users[bd_mate[self.count_pred][0]] = [{"username": f'@{message.from_user.username}',
                                                           "text": f"{self.data[1]} –ª–∞–π–Ω–∫—É–ª/–∞ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É\n\n"
                                                                   f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {self.data[1]}\n"
                                                                   f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {self.data[3]}\n"
                                                                   f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {self.data[4]}\n"
                                                                   f"üí∞ –ë—é–¥–∂–µ—Ç: {self.data[5]}\n"
                                                                   f"üîç –û–±–æ –º–Ω–µ: {self.data[7]}\n"
                                                                   f"üîç –û —Ç–µ–±–µ: {self.data[8]}"}]
                msg = mate_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°–æ—Å–µ–¥–∞\n\n"
                                                        f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_mate[self.count][1]}\n"
                                                        f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {bd_mate[self.count][3]}\n"
                                                        f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_mate[self.count][4]}\n"
                                                        f"üí∞ –ë—é–¥–∂–µ—Ç: {bd_mate[self.count][5]}\n"
                                                        f"üîç –û–±–æ –º–Ω–µ: {bd_mate[self.count][7]}\n"
                                                        f"üîç –û —Ç–µ–±–µ: {bd_mate[self.count][8]}")

                mate_bot.register_next_step_handler(msg, self.feed)

            elif message.text == "üí§":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

                btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
                btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
                btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
                btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
                btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

                markup.row(btn1, btn2, btn3).row(btn4, btn5)

                mate_bot.send_message(message.chat.id, 'üè° –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ "Studlife Mate"! üè°\n\n'
                                                  '–ï—Å–ª–∏ –≤—ã –∏—â–µ—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã—Ö –∏ —Å–∏–º–ø–∞—Ç–∏—á–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∞—Ä–µ–Ω–¥—ã –∂–∏–ª—å—è, –≤—ã –Ω–∞—à–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ. –ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º.\n\n'
                                                  '–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º:\n'
                                                  'üîç –†–∞–∑–º–µ—â–∞—Ç—å –∞–Ω–∫–µ—Ç—ã –∏ –æ–ø–∏—Å–∞–Ω–∏—è –∂–∏–ª—å—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —Å–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É\n'
                                                  'üßë‚Äçü§ù‚Äçüßë –ò—Å–∫–∞—Ç—å —Å–æ—Å–µ–¥–µ–π, —á—Ç–æ–±—ã —Å–æ–≤–º–µ—Å—Ç–Ω–æ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∂–∏–ª—å–µ –∏ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –∂–∏–ª–∏—â–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–∞—Ö.\n'
                                                  'üìù –û–ø–∏—Å—ã–≤–∞—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ —Å–æ–∂–∏—Ç–µ–ª—å—Å—Ç–≤—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–æ—É—á–∞—Å–Ω–∏–∫–æ–≤.\n'
                                                  'üí¨ –û–±—â–∞—Ç—å—Å—è —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–æ—Å–µ–¥—è–º–∏ –∏ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è –æ –¥–µ—Ç–∞–ª—è—Ö –∞—Ä–µ–Ω–¥—ã.',
                                 reply_markup=markup)

    def feed_after(self, message):
        bd_mate = feed_mate(self.data[0], self.data[3], self.data[6], self.data[9])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("‚ù§")
        btn2 = types.KeyboardButton("üëé")
        btn3 = types.KeyboardButton("üí§")

        markup.row(btn1, btn2, btn3)

        msg = mate_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°–æ—Å–µ–¥–∞\n\n"
                                                f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_mate[self.count][1]}\n"
                                                f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {bd_mate[self.count][3]}\n"
                                                f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_mate[self.count][4]}\n"
                                                f"üí∞ –ë—é–¥–∂–µ—Ç: {bd_mate[self.count][5]}\n"
                                                f"üîç –û–±–æ –º–Ω–µ: {bd_mate[self.count][7]}\n"
                                                f"üîç –û —Ç–µ–±–µ: {bd_mate[self.count][8]}", reply_markup=markup)
        mate_bot.register_next_step_handler(msg, self.feed)


class JobFeed:
    def __init__(self, count, data):
        self.count = count
        self.data = data
        self.ads_count = 0

    def feed(self, message):
        bd_job = feed_job(self.data[3]) # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—ã –ø–æ —Å–æ–≤–º–µ—Å—Ç–∏—Ç–µ–ª—å—Å—Ç–≤—É –≥–æ—Ä–æ–¥–∞
        flag = True
        is_count = True

        if message.text == "–û–∫–µ–π":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("‚ù§")
            btn2 = types.KeyboardButton("üëé")
            btn3 = types.KeyboardButton("üí§")

            markup.row(btn1, btn2, btn3)

            msg = job_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                                      f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count][1]}\n"
                                                      f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count][3]}\n"
                                                      f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count][4]}\n"
                                                      f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count][6]}\n"
                                                      f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count][4]}\n"
                                                      f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count][7]}", reply_markup=markup)

            job_bot.register_next_step_handler(msg, self.feed)
            return

        self.ads_count += 1

        if self.ads_count > 30:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn = types.KeyboardButton("–û–∫–µ–π")
            markup.add(btn)

            msg = job_bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª: "
                                                    "<a href='https://t.me/+S46mvD24xeFhZWIy'>–°—Ç—É–¥–ª–∞–π—Ñ</a>\n"
                                                    "–í –Ω–µ–º –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –≤–∞—Å\n\n"
                                                    "–° —É–≤–∞–∂–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥–∞ Studlife", parse_mode="HTML",
                                   reply_markup=markup)
            job_bot.register_next_step_handler(msg, self.feed_after)
            self.ads_count = 0
            return

        self.count_pred = self.count
        # –ò—â–µ–º –∞–Ω–∫–µ—Ç—É
        for i in range(self.count + 1, len(bd_job)):
            if bd_job[i][8] == 1:
                self.count = i
                print(self.count)
                flag = False
                is_count = False
                break

        if flag:
            for i in range(len(bd_job)):
                if bd_job[i][8] == 1:
                    is_count = False
                    self.count_pred = self.count
                    self.count = i
                    break

        if is_count or len(bd_job) == 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
            btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
            btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
            btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
            btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

            markup.row(btn1, btn2, btn3).row(btn4, btn5)

            job_bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç –Ω–µ—Ç!", reply_markup=markup)

        else:
            if message.text == "üëé":
                msg = job_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                                        f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count][1]}\n"
                                                        f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count][3]}\n"
                                                        f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count][4]}\n"
                                                        f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count][6]}\n"
                                                        f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count][4]}\n"
                                                        f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count][7]}")
                job_bot.register_next_step_handler(msg, self.feed)

            elif message.text == "‚ù§":
                print(f"{self.data[1]} –ª–∞–π–∫–Ω—É–ª {bd_job[self.count_pred][1]}")

                if bd_job[self.count_pred][0] in vacancy_resume:
                    if f'@{message.from_user.username}' in [i["username"] for i in
                                                            vacancy_resume[bd_job[self.count_pred][0]]]:
                        job_bot.send_message(message.chat.id, "–í—ã —É–∂–µ –ª–∞–π–∫–Ω—É–ª–∏ —ç—Ç–æ–≥–æ —Ä–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª—è\n–í–∏–¥–Ω–æ –æ–Ω –µ—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª!")

                    else:
                        vacancy_resume[bd_job[self.count_pred][0]].append({"username": f'@{message.from_user.username}', "text": f'@{self.data[1]}\n'
                                                                                                                f'–ò–º—è: {self.data[2]}\n'
                                                                                                                f'–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ–±—è: {self.data[4]}\n'
                                                                                                                f'–õ–∞–π–∫–Ω—É–ª –∞–Ω–∫–µ—Ç—É\n'
                                                                                                                f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                                                                                                f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count_pred][1]}\n"
                                                                                                                f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count_pred][3]}\n"
                                                                                                                f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count_pred][4]}\n"
                                                                                                                f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count_pred][6]}\n"
                                                                                                                f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count_pred][4]}\n"
                                                                                                                f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count_pred][7]}"})
                        job_bot.send_message(random.choice(admin_list),
                                             f'@{self.data[1]}\n'
                                             f'–ò–º—è: {self.data[2]}\n'
                                             f'–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ–±—è: {self.data[4]}\n'
                                             f'–õ–∞–π–∫–Ω—É–ª –∞–Ω–∫–µ—Ç—É\n'
                                             f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                             f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count_pred][1]}\n"
                                             f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count_pred][3]}\n"
                                             f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count_pred][4]}\n"
                                             f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count_pred][6]}\n"
                                             f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count_pred][4]}\n"
                                             f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count_pred][7]}", reply_markup=types.InlineKeyboardMarkup().add(types.InlineKeyboardButton("–ü–æ–¥–æ—à–µ–ª, —É–¥–∞–ª–∏—Ç—å!", callback_data="like")).add(types.InlineKeyboardButton("–ù–µ –ø–æ–¥–æ—à–µ–ª", callback_data="dislike")))
                else:
                    vacancy_resume[bd_job[self.count_pred][0]] = [{"username": f'@{message.from_user.username}', "text": f'@{self.data[1]}\n'
                                                                                                                f'–ò–º—è: {self.data[2]}\n'
                                                                                                                f'–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ–±—è: {self.data[4]}\n'
                                                                                                                f'–õ–∞–π–∫–Ω—É–ª –∞–Ω–∫–µ—Ç—É\n'
                                                                                                                f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                                                                                                f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count_pred][1]}\n"
                                                                                                                f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count_pred][3]}\n"
                                                                                                                f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count_pred][4]}\n"
                                                                                                                f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count_pred][6]}\n"
                                                                                                                f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count_pred][4]}\n"
                                                                                                                f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count_pred][7]}"}]
                    job_bot.send_message(random.choice(admin_list),
                                         f'@{self.data[1]}\n'
                                         f'–ò–º—è: {self.data[2]}\n'
                                         f'–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ–±—è: {self.data[4]}\n'
                                         f'–õ–∞–π–∫–Ω—É–ª –∞–Ω–∫–µ—Ç—É\n'
                                         f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                         f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count_pred][1]}\n"
                                         f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count_pred][3]}\n"
                                         f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count_pred][4]}\n"
                                         f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count_pred][6]}\n"
                                         f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count_pred][4]}\n"
                                         f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count_pred][7]}", reply_markup=types.InlineKeyboardMarkup().add(types.InlineKeyboardButton("–ü–æ–¥–æ—à–µ–ª, —É–¥–∞–ª–∏—Ç—å!", callback_data="like")).add(types.InlineKeyboardButton("–ù–µ –ø–æ–¥–æ—à–µ–ª", callback_data="dislike")))
                print(vacancy_resume)
                msg = job_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                                        f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count][1]}\n"
                                                        f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count][3]}\n"
                                                        f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count][4]}\n"
                                                        f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count][6]}\n"
                                                        f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count][4]}\n"
                                                        f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count][7]}")
                job_bot.register_next_step_handler(msg, self.feed)

            elif message.text == "üí§":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

                btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
                btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
                btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
                btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

                markup.row(btn1, btn2).row(btn4, btn5)

                job_bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ "–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"! üöÄüéì\n'
                                                  '–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —É–¥–æ–±–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± –Ω–∞—Ö–æ–¥–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏. –ú—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å –≤ –∫–∞—Ä—å–µ—Ä–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –æ—Ç –≤–µ–¥—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π.\n'
                                                  '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –≤ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π —Ç–µ–±—è –æ–±–ª–∞—Å—Ç—å—é. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –ø–æ–∏—Å–∫ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–¥–æ–±–Ω—ã–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º!\n'
                                                  '–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –æ–±—Ä–∞—â–∞—Ç—å—Å—è. –£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏! üíºüåê',
                                 reply_markup=markup)

    def feed_after(self, message):
        bd_job = feed_job(self.data[3])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("‚ù§")
        btn2 = types.KeyboardButton("üëé")
        btn3 = types.KeyboardButton("üí§")

        markup.row(btn1, btn2, btn3)

        msg = job_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n\n"
                                                f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {bd_job[self.count][1]}\n"
                                                f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–µ—Ä–∞: {bd_job[self.count][3]}\n"
                                                f"üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–∂–µ—Ä—É: {bd_job[self.count][4]}\n"
                                                f"üåü –£—Å–ª–æ–≤–∏—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: {bd_job[self.count][6]}\n"
                                                f"‚è∞ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {bd_job[self.count][4]}\n"
                                                f"üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ (–µ—Å–ª–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ): {bd_job[self.count][7]}")
        job_bot.register_next_step_handler(msg, self.feed)


class SkillsFeed:
    def __init__(self, count, data):
        self.count = count
        self.data = data
        self.ads_count = 0

    def feed(self, message):
        bd_skills = feed_skills(self.data[0], self.data[3], self.data[5], self.data[8])
        flag = True
        is_count = True

        if message.chat.id in skills_users:
            if len(skills_users[message.chat.id]) > 0:
                markup = types.InlineKeyboardMarkup()

                btn1 = types.InlineKeyboardButton("–õ–∞–π–∫", callback_data="like")
                btn2 = types.InlineKeyboardButton("–î–∏–∑–ª–∞–π–∫", callback_data="dislike")

                markup.add(btn1)
                markup.add(btn2)

                for i in range(len(skills_users[message.chat.id])):
                    skills_bot.send_message(message.chat.id, text=skills_users[message.chat.id][i]["text"], reply_markup=markup)
                msg = skills_bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è!", reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(types.KeyboardButton("–û–∫–µ–π")))
                skills_bot.register_next_step_handler(msg, self.feed)
                return

        if message.text == "–û–∫–µ–π":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("‚ù§")
            btn2 = types.KeyboardButton("üëé")
            btn3 = types.KeyboardButton("üí§")

            markup.row(btn1, btn2, btn3)

            msg = skills_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –û–±–º–µ–Ω–∞ –ù–∞–≤—ã–∫–∞–º–∏\n\n"
                                                    f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_skills[self.count][1]}\n"
                                                    f"üè° –ò—â—É —á–µ–ª–æ–≤–µ–∫–∞ –≤: {bd_skills[self.count][3]}\n"
                                                    f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_skills[self.count][4]}\n"
                                                    f"üîç –û–±–æ –º–Ω–µ: {bd_skills[self.count][6]}\n"
                                                    f"üîç –û —Ç–µ–±–µ: {bd_skills[self.count][7]}", reply_markup=markup)
            skills_bot.register_next_step_handler(msg, self.feed)
            return

        self.ads_count += 1

        if self.ads_count > 30:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn = types.KeyboardButton("–û–∫–µ–π")
            markup.add(btn)

            msg = skills_bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª: "
                                                    "<a href='https://t.me/+S46mvD24xeFhZWIy'>–°—Ç—É–¥–ª–∞–π—Ñ</a>\n"
                                                    "–í –Ω–µ–º –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –≤–∞—Å\n\n"
                                                    "–° —É–≤–∞–∂–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥–∞ Studlife", parse_mode="HTML",
                                   reply_markup=markup)
            skills_bot.register_next_step_handler(msg, self.feed_after)
            self.ads_count = 0
            return

        self.count_pred = self.count

        for i in range(self.count + 1, len(bd_skills)):
            if bd_skills[i][9] == 1:
                self.count = i
                print(self.count)
                flag = False
                is_count = False
                break

        if flag:
            for i in range(len(bd_skills)):
                if bd_skills[i][9] == 1:
                    is_count = False
                    self.count_pred = self.count
                    self.count = i
                    break

        if is_count or len(bd_skills) == 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
            btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
            btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
            btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
            btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

            markup.row(btn1, btn2, btn3).row(btn4, btn5)

            skills_bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç –Ω–µ—Ç!", reply_markup=markup)

        else:
            if message.text == "üëé":
                msg = skills_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –û–±–º–µ–Ω–∞ –ù–∞–≤—ã–∫–∞–º–∏\n\n"
                                                        f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_skills[self.count][1]}\n"
                                                        f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {bd_skills[self.count][3]}\n"
                                                        f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_skills[self.count][4]}\n"
                                                        f"üîç –û–±–æ –º–Ω–µ: {bd_skills[self.count][6]}\n"
                                                        f"üîç –û —Ç–µ–±–µ: {bd_skills[self.count][7]}")
                skills_bot.register_next_step_handler(msg, self.feed)

            elif message.text == "‚ù§":
                print(f"{self.data[1]} –ª–∞–π–∫–Ω—É–ª {bd_skills[self.count_pred][1]}")

                if bd_skills[self.count_pred][0] in skills_users:
                    if f'@{message.from_user.username}' in [i["username"] for i in
                                                            skills_users[bd_skills[self.count_pred][0]]]:
                        skills_bot.send_message(message.chat.id, "–í—ã —É–∂–µ –ª–∞–π–∫–Ω—É–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n–í–∏–¥–Ω–æ –æ–Ω –µ—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª!")

                    else:
                        skills_users[bd_skills[self.count - 1][0]].append({"username": f'@{message.from_user.username}',
                                                                  "text": f"{self.data[1]} –ª–∞–π–Ω–∫—É–ª/–∞ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É\n\n"
                                                                          f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {self.data[1]}\n"
                                                                          f"üè° –ò—â—É —á–µ–ª–æ–≤–µ–∫–∞ –≤: {self.data[3]}\n"
                                                                          f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {self.data[4]}\n"
                                                                          f"üîç –û–±–æ –º–Ω–µ: {self.data[6]}\n"
                                                                          f"üîç –û —Ç–µ–±–µ: {self.data[7]}"})
                else:
                    skills_users[bd_skills[self.count_pred][0]] = [{"username": f'@{message.from_user.username}',
                                                           "text": f"{self.data[1]} –ª–∞–π–Ω–∫—É–ª/–∞ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É\n\n"
                                                                   f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {self.data[1]}\n"
                                                                   f"üè° –ò—â—É —á–µ–ª–æ–≤–µ–∫–∞ –≤: {self.data[3]}\n"
                                                                   f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {self.data[4]}\n"
                                                                   f"üîç –û–±–æ –º–Ω–µ: {self.data[6]}\n"
                                                                   f"üîç –û —Ç–µ–±–µ: {self.data[7]}"}]
                msg = skills_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –û–±–º–µ–Ω–∞ –ù–∞–≤—ã–∫–∞–º–∏\n\n"
                                                        f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_skills[self.count][1]}\n"
                                                        f"üè° –ò—â—É —á–µ–ª–æ–≤–µ–∫–∞ –≤: {bd_skills[self.count][3]}\n"
                                                        f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_skills[self.count][4]}\n"
                                                        f"üîç –û–±–æ –º–Ω–µ: {bd_skills[self.count][6]}\n"
                                                        f"üîç –û —Ç–µ–±–µ: {bd_skills[self.count][7]}")

                skills_bot.register_next_step_handler(msg, self.feed)

            elif message.text == "üí§":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

                btn1 = types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
                btn2 = types.KeyboardButton("üë• –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
                btn3 = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
                btn4 = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
                btn5 = types.KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")

                markup.row(btn1, btn2, btn3).row(btn4, btn5)

                skills_bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç "–û–±–º–µ–Ω –Ω–∞–≤—ã–∫–∞–º–∏"! üîÑü§ù\n'
                                             '–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞ –Ω–∞–≤—ã–∫–∞–º–∏ –∏ –∑–Ω–∞–Ω–∏–π. –û–±—É—á–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º, –∫–æ–≥–¥–∞ –µ—Å—Ç—å –∫—Ç–æ-—Ç–æ, —Å –∫–µ–º –º–æ–∂–Ω–æ –¥–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º –∏ —É—á–∏—Ç—å—Å—è –Ω–æ–≤–æ–º—É!\n'
                                             '–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–±—É—á–µ–Ω–∏–µ —Å—Ç–∞–Ω–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º!\n'
                                             '–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –æ–±—Ä–∞—â–∞—Ç—å—Å—è. –£–¥–∞—á–∏ –≤ –æ–±–º–µ–Ω–µ –Ω–∞–≤—ã–∫–∞–º–∏! üöÄüìöüîÅ',
                                 reply_markup=markup)

    def feed_after(self, message):
        bd_skills = feed_skills(self.data[0], self.data[3], self.data[5], self.data[8])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        btn1 = types.KeyboardButton("‚ù§")
        btn2 = types.KeyboardButton("üëé")
        btn3 = types.KeyboardButton("üí§")

        markup.row(btn1, btn2, btn3)

        msg = skills_bot.send_message(message.chat.id, f"üë• –ê–Ω–∫–µ—Ç–∞ –û–±–º–µ–Ω–∞ –ù–∞–≤—ã–∫–∞–º–∏\n\n"
                                                f"üë§ –ú–µ–Ω—è –∑–æ–≤—É—Ç: {bd_skills[self.count][1]}\n"
                                                f"üè° –ò—â—É —Å–æ—Å–µ–¥–∞ –≤: {bd_skills[self.count][3]}\n"
                                                f"üìÖ –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç: {bd_skills[self.count][4]}\n"
                                                f"üîç –û–±–æ –º–Ω–µ: {bd_skills[self.count][6]}\n"
                                                f"üîç –û —Ç–µ–±–µ: {bd_skills[self.count][7]}", reply_markup=markup)
        skills_bot.register_next_step_handler(msg, self.feed)
